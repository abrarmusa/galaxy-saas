import * as tslib_1 from "tslib";
import * as classNames from 'classnames';
import * as React from 'react';
import { withHelpersModifiers } from './../bulma';
import { getHTMLProps } from './../helpers';
import { getGridSizesModifiers, removeGridSizesProps } from './grid';
export function Tile(_a) {
    var _b = _a.tag, tag = _b === void 0 ? 'div' : _b, render = _a.render, props = tslib_1.__rest(_a, ["tag", "render"]);
    var className = classNames('tile', tslib_1.__assign({ 'is-ancestor': props.isAncestor, 'is-child': props.isChild, 'is-parent': props.isParent, 'is-vertical': props.isVertical }, getGridSizesModifiers(props.isSize)), props.className);
    var isAncestor = props.isAncestor, isChild = props.isChild, isParent = props.isParent, isVertical = props.isVertical, rest = tslib_1.__rest(props, ["isAncestor", "isChild", "isParent", "isVertical"]);
    var HTMLProps = getHTMLProps(rest, removeGridSizesProps);
    if (render)
        return render(tslib_1.__assign({}, HTMLProps, { className: className }));
    return React.createElement(tag, tslib_1.__assign({}, HTMLProps, { className: className }));
}
var HOC = /*@__PURE__*/ withHelpersModifiers(Tile);
export default HOC;
//# sourceMappingURL=Tile.js.map