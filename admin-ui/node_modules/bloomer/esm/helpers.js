import * as tslib_1 from "tslib";
export function getHTMLProps(props) {
    var args = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        args[_i - 1] = arguments[_i];
    }
    return args.length > 0 ? args.reduce(function (rest, fn) { return (tslib_1.__assign({}, fn(rest))); }, props) : props;
}
export function combineModifiers(props) {
    var args = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        args[_i - 1] = arguments[_i];
    }
    return args.length > 0 ? args.reduce(function (rest, fn) { return (tslib_1.__assign({}, rest, fn(props))); }, {}) : {};
}
export var isBetween = function (min, max) { return function (value) { return (value >= min && value <= max); }; };
export var is = function (options) { return function (str) { return options[str] || false; }; };
export var isOption = function () {
    var fn = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        fn[_i] = arguments[_i];
    }
    return function (str) { return fn.some(function (option) { return option(str); }); };
};
//# sourceMappingURL=helpers.js.map