import * as tslib_1 from "tslib";
import * as classNames from 'classnames';
import * as React from 'react';
import { getColorModifiers, getLoadingModifiers, getSizeModifiers, removeColorProps, removeLoadingProps, removeSizeProps, withHelpersModifiers, } from './../../bulma';
import { combineModifiers, getHTMLProps } from './../../helpers';
export function Select(props) {
    var wrapperClassName = classNames('select', tslib_1.__assign({ 'is-disabled': props.disabled }, combineModifiers(props, getColorModifiers, getSizeModifiers, getLoadingModifiers)), props.className);
    var _a = getHTMLProps(props, removeColorProps, removeSizeProps, removeLoadingProps), children = _a.children, className = _a.className, HTMLProps = tslib_1.__rest(_a, ["children", "className"]);
    return (React.createElement("div", { className: wrapperClassName },
        React.createElement("select", tslib_1.__assign({}, HTMLProps), children)));
}
var HOC = /*@__PURE__*/ withHelpersModifiers(Select);
export default HOC;
//# sourceMappingURL=Select.js.map