import * as tslib_1 from "tslib";
import * as classNames from 'classnames';
import * as React from 'react';
import { getSizeModifiers, isLeft, isRight, removeAlignmentProps, removeSizeProps, withHelpersModifiers, } from './../bulma';
import { getHTMLProps, isOption } from './../helpers';
var isAlignOption = isOption(isLeft, isRight);
export function Icon(_a) {
    var _b;
    var children = _a.children, props = tslib_1.__rest(_a, ["children"]);
    var className = classNames('icon', tslib_1.__assign({}, (isAlignOption(props.isAlign) ? (_b = {}, _b["is-" + props.isAlign] = true, _b) : {}), getSizeModifiers(props)));
    var HTMLProps = getHTMLProps(props, removeAlignmentProps, removeSizeProps);
    var icon = (React.createElement("span", tslib_1.__assign({}, HTMLProps, { className: className }),
        React.createElement("i", { className: "" + props.className, "aria-hidden": "true" })));
    return icon;
}
var HOC = /*@__PURE__*/ withHelpersModifiers(Icon);
export default HOC;
//# sourceMappingURL=Icon.js.map