import * as tslib_1 from "tslib";
import * as classNames from 'classnames';
import * as React from 'react';
import { getColorModifiers, getSizeModifiers, removeColorProps, removeSizeProps, withHelpersModifiers, } from './../bulma';
import { combineModifiers, getHTMLProps } from './../helpers';
export function Tag(_a) {
    var _b = _a.tag, tag = _b === void 0 ? 'span' : _b, props = tslib_1.__rest(_a, ["tag"]);
    var className = classNames('tag', tslib_1.__assign({}, combineModifiers(props, getColorModifiers, getSizeModifiers)), props.className);
    var HTMLProps = getHTMLProps(props, removeColorProps, removeSizeProps);
    return React.createElement(tag, tslib_1.__assign({}, HTMLProps, { className: className }));
}
var HOC = /*@__PURE__*/ withHelpersModifiers(Tag);
export default HOC;
//# sourceMappingURL=Tag.js.map