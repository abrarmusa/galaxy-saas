{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["import React from \"react\";\nimport { findDOMNode } from \"react-dom\";\nimport PropTypes from \"prop-types\";\n\nclass ReactToPrint extends React.Component {\n\n  static propTypes = {\n    /** Copy styles over into print window. default: true */\n    copyStyles: PropTypes.bool,\n    /** Trigger action used to open browser print */\n    trigger: PropTypes.func.isRequired,\n    /** Content to be printed */\n    content: PropTypes.func.isRequired,\n    /** Callback function to trigger before print */\n    onBeforePrint: PropTypes.func,\n    /** Callback function to trigger after print */\n    onAfterPrint: PropTypes.func,\n    /** Override default print window styling */\n    pageStyle: PropTypes.string,\n    /** Optional class to pass to the print window body */\n    bodyClass: PropTypes.string,\n  };\n\n  static defaultProps = {\n    copyStyles: true,\n    closeAfterPrint: true,\n    bodyClass: '',\n  };\n\n  triggerPrint(target) {\n    const { onBeforePrint, onAfterPrint } = this.props;\n\n    if (onBeforePrint) {\n      onBeforePrint();\n    }\n\n    setTimeout(() => {\n      target.contentWindow.focus();\n      target.contentWindow.print();\n      this.removeWindow(target);\n\n      if (onAfterPrint) {\n        onAfterPrint();\n      }\n\n    }, 500);\n  }\n\n  removeWindow(target) {\n    setTimeout(() => {\n      target.parentNode.removeChild(target);\n    }, 500);\n  }\n\n  handlePrint = () => {\n\n    const {\n      bodyClass,\n      content,\n      copyStyles,\n      pageStyle,\n      onAfterPrint\n    } = this.props;\n\n    const contentEl = content();\n\n    if (contentEl === undefined) {\n      console.error(\"Refs are not available for stateless components. For 'react-to-print' to work only Class based components can be printed\");\n      return false;\n    }\n\n    let printWindow = document.createElement('iframe');\n    printWindow.style.position = 'absolute';\n    printWindow.style.top = '-1000px';\n    printWindow.style.left = '-1000px';\n\n    const contentNodes = findDOMNode(contentEl);\n    const linkNodes = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    this.linkTotal = linkNodes.length || 0;\n    this.linkLoaded = 0;\n\n    const markLoaded = (type) => {\n\n      this.linkLoaded++;\n\n      if (this.linkLoaded === this.linkTotal) {\n        this.triggerPrint(printWindow);\n      }\n\n    };\n\n    printWindow.onload = () => {\n      /* IE11 support */\n      if (window.navigator && window.navigator.userAgent.indexOf('Trident/7.0') > -1) {\n        printWindow.onload = null;\n      }\n\n      let domDoc = printWindow.contentDocument || printWindow.contentWindow.document;\n      const srcCanvasEls = [...contentNodes.querySelectorAll('canvas')];\n\n      domDoc.open();\n      domDoc.write(contentNodes.outerHTML);\n      domDoc.close();\n\n      /* remove date/time from top */\n      const defaultPageStyle = pageStyle === undefined\n        ? \"@page { size: auto;  margin: 0mm; } @media print { body { -webkit-print-color-adjust: exact; } }\"\n        : pageStyle;\n\n      let styleEl = domDoc.createElement('style');\n      styleEl.appendChild(domDoc.createTextNode(defaultPageStyle));\n      domDoc.head.appendChild(styleEl);\n\n      if (bodyClass.length) {\n        domDoc.body.classList.add(bodyClass);\n      }\n\n      const canvasEls = domDoc.querySelectorAll('canvas');\n      [...canvasEls].forEach((node, index) => {\n        node.getContext('2d').drawImage(srcCanvasEls[index], 0, 0);\n      });\n\n      if (copyStyles !== false) {\n\n        const headEls = document.querySelectorAll('style, link[rel=\"stylesheet\"]');\n\n        [...headEls].forEach((node, index) => {\n\n          let newHeadEl = domDoc.createElement(node.tagName);\n          let styleCSS = \"\";\n\n          if (node.tagName === 'STYLE') {\n\n            if (node.sheet) {\n              for (let i = 0; i < node.sheet.cssRules.length; i++) {\n                styleCSS += node.sheet.cssRules[i].cssText + \"\\r\\n\";\n              }\n\n              newHeadEl.setAttribute('id', `react-to-print-${index}`);\n              newHeadEl.appendChild(domDoc.createTextNode(styleCSS));\n\n            }\n\n          } else {\n\n            let attributes = [...node.attributes];\n            attributes.forEach(attr => {\n              newHeadEl.setAttribute(attr.nodeName, attr.nodeValue);\n            });\n\n            newHeadEl.onload = markLoaded.bind(null, 'link');\n            newHeadEl.onerror = markLoaded.bind(null, 'link');\n\n          }\n\n          domDoc.head.appendChild(newHeadEl);\n\n        });\n\n\n      }\n\n      if (this.linkTotal === 0 || copyStyles === false) {\n        this.triggerPrint(printWindow);\n      }\n\n    };\n\n    document.body.appendChild(printWindow);\n\n  }\n\n  render() {\n\n    return React.cloneElement(this.props.trigger(), {\n      ref: (el) => this.triggerRef = el,\n      onClick: this.handlePrint\n    });\n\n  }\n\n}\n\nexport default ReactToPrint;\n"],"names":["ReactToPrint","handlePrint","_this","props","bodyClass","content","copyStyles","pageStyle","contentEl","onAfterPrint","undefined","error","printWindow","document","createElement","style","position","top","left","contentNodes","findDOMNode","linkNodes","querySelectorAll","linkTotal","length","linkLoaded","markLoaded","type","triggerPrint","onload","window","navigator","userAgent","indexOf","domDoc","contentDocument","contentWindow","srcCanvasEls","open","write","outerHTML","close","defaultPageStyle","styleEl","appendChild","createTextNode","head","body","classList","add","canvasEls","forEach","node","index","getContext","drawImage","headEls","newHeadEl","tagName","styleCSS","sheet","i","cssRules","cssText","setAttribute","attributes","attr","nodeName","nodeValue","bind","onerror","target","this","onBeforePrint","focus","print","removeWindow","parentNode","removeChild","React","cloneElement","trigger","el","_this3","triggerRef","Component","defaultProps"],"mappings":"+sCAIMA,mQAkDJC,YAAc,iBAQRC,EAAKC,MALPC,IAAAA,UACAC,IAAAA,QACAC,IAAAA,WACAC,IAAAA,UAIIC,KAHJC,aAGgBJ,aAEAK,IAAdF,iBACMG,MAAM,6HACP,MAGLC,EAAcC,SAASC,cAAc,YAC7BC,MAAMC,SAAW,aACjBD,MAAME,IAAM,YACZF,MAAMG,KAAO,cAEnBC,EAAeC,qBAAYZ,GAC3Ba,EAAYR,SAASS,iBAAiB,4BAEvCC,UAAYF,EAAUG,QAAU,IAChCC,WAAa,MAEZC,EAAa,SAACC,KAEbF,aAEDvB,EAAKuB,aAAevB,EAAKqB,aACtBK,aAAahB,MAKViB,OAAS,WAEfC,OAAOC,WAAaD,OAAOC,UAAUC,UAAUC,QAAQ,gBAAkB,MAC/DJ,OAAS,UAGnBK,EAAStB,EAAYuB,iBAAmBvB,EAAYwB,cAAcvB,SAChEwB,8BAAmBlB,EAAaG,iBAAiB,cAEhDgB,SACAC,MAAMpB,EAAaqB,aACnBC,YAGDC,OAAiChC,IAAdH,EACrB,mGACAA,EAEAoC,EAAUT,EAAOpB,cAAc,WAC3B8B,YAAYV,EAAOW,eAAeH,MACnCI,KAAKF,YAAYD,GAEpBvC,EAAUoB,UACLuB,KAAKC,UAAUC,IAAI7C,OAGtB8C,EAAYhB,EAAOZ,iBAAiB,yCACtC4B,IAAWC,QAAQ,SAACC,EAAMC,KACvBC,WAAW,MAAMC,UAAUlB,EAAagB,GAAQ,EAAG,MAGvC,IAAf/C,EAAsB,KAElBkD,EAAU3C,SAASS,iBAAiB,6DAEtCkC,IAASL,QAAQ,SAACC,EAAMC,OAEtBI,EAAYvB,EAAOpB,cAAcsC,EAAKM,SACtCC,EAAW,MAEM,UAAjBP,EAAKM,YAEHN,EAAKQ,MAAO,KACT,IAAIC,EAAI,EAAGA,EAAIT,EAAKQ,MAAME,SAAStC,OAAQqC,OAClCT,EAAKQ,MAAME,SAASD,GAAGE,QAAU,SAGrCC,aAAa,uBAAwBX,KACrCT,YAAYV,EAAOW,eAAec,SAIzC,6BAEgBP,EAAKa,aACfd,QAAQ,cACPa,aAAaE,EAAKC,SAAUD,EAAKE,eAGnCvC,OAASH,EAAW2C,KAAK,KAAM,UAC/BC,QAAU5C,EAAW2C,KAAK,KAAM,UAIrCvB,KAAKF,YAAYa,KAOL,IAAnBvD,EAAKqB,YAAkC,IAAfjB,KACrBsB,aAAahB,aAKbmC,KAAKH,YAAYhC,8GA5If2D,gBAC6BC,KAAKrE,MAArCsE,IAAAA,cAAehE,IAAAA,aAEnBgE,kBAIO,aACFrC,cAAcsC,UACdtC,cAAcuC,UAChBC,aAAaL,GAEd9D,QAIH,0CAGQ8D,cACA,aACFM,WAAWC,YAAYP,IAC7B,wDA4HIQ,MAAMC,aAAaR,KAAKrE,MAAM8E,eAC9B,SAACC,UAAOC,EAAKC,WAAaF,WACtBV,KAAKvE,qBA7KO8E,MAAMM,WAA3BrF,aAmBGsF,0BACO,mBACK,YACN"}